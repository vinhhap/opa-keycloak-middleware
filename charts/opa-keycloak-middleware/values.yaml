# Default values for opa_kecloak_middleware.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: qnguyen3496/opa-keycloak-middleware
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthcheck
    port: http
readinessProbe:
  httpGet:
    path: /healthcheck
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

middlewareConfig:
  # Number of FastAPI workers
  fastapiNumWorkers: "2"
  fastApiPort: "80"
  appRootPath: ""
  # API Key using to authenticate the service (is omitted when `secretConfig` is used)
  auth:
    apiKey: "default_api_key"
  # Keycloak configuration (is omitted when `secretConfig` is used)
  keycloak:
    serverUrl: "http://localhost/"
    realmName: "master"
    clientId: "default-client"
    clientSecret: "supersecret"
    # `grantType` can be configured as 'client_credentials' or 'password'
    grantType: "client_credentials"
    # `username` and `password` only needed when `grantType` is set to 'password'
    username: ""
    password: ""
  # Get all middleware configuration from existing secret
  secretConfigName: ""